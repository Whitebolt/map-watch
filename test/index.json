{"WatchMap()":{"longname":"WatchMap","name":"WatchMap","kind":"constructor","memberof":"WatchMap","params":[{"type":{"names":["iterable"]},"description":"is an Array or other iterable object whose elements are key-value pairs (2-element Arrays). Each key-value pair is added to the new Map. null is treated as undefined.","name":"Iterable"}],"order":6},"WatchMap":{"longname":"WatchMap","name":"WatchMap","scope":"global","kind":"class","augments":["Map"],"description":"Extension of the native JavaScript class, Map. Has all the parent methods with extra ability of being able to watch and report on changes to values.","type":{"names":["WatchMap"]},"customTags":[{"tag":"note","value":"Will not do a deep watch, so if a value is an object, which is modified outside of the set() method defined here, watchers will not be fired."}],"meta":{"lineno":100,"filename":"index.js","path":"/home/simpo/Projects/map-watch"},"order":5},"_getPrivate":{"longname":"_getPrivate","name":"_getPrivate","scope":"global","kind":"function","description":"Get private map for given object. If map does not exist, create it. This is useful when you want to have private properties or methods in an ES6 class.","params":[{"type":{"names":["WatchMap"]},"description":"The reference object.","name":"self"}],"returns":[{"type":{"names":["Map"]},"description":"The private map."}],"access":"private","meta":{"lineno":20,"filename":"index.js","path":"/home/simpo/Projects/map-watch"},"order":1},"_getPrivateMap":{"longname":"_getPrivateMap","name":"_getPrivateMap","scope":"global","kind":"function","description":"Get a map from the private map for given reference object. Basically, private maps for given WatchMap instance.","params":[{"type":{"names":["WatchMap"]},"description":"The reference object.","name":"self"},{"type":{"names":["*"]},"description":"The key name.","name":"key"}],"returns":[{"type":{"names":["Map"]},"description":"The private map."}],"access":"private","meta":{"lineno":34,"filename":"index.js","path":"/home/simpo/Projects/map-watch"},"order":2},"_fire":{"longname":"_fire","name":"_fire","scope":"global","kind":"function","description":"Fire a specific watcher, firing any registered callbacks for that default.","params":[{"type":{"names":["WatchMap"]},"description":"The WatchMap object we are working on.","name":"self"},{"type":{"names":["*"]},"description":"The key to fire watchers for.","name":"key"},{"type":{"names":["*"]},"description":"The new old value for that key.","name":"value"}],"access":"private","meta":{"lineno":49,"filename":"index.js","path":"/home/simpo/Projects/map-watch"},"order":3},"_randomString":{"longname":"_randomString","name":"_randomString","scope":"global","kind":"function","description":"Generate a random string of specified length.","params":[{"type":{"names":["integer"]},"optional":true,"defaultvalue":32,"description":"The length of string to return.","name":"length"}],"returns":[{"type":{"names":["string"]},"description":"The random string."}],"access":"public","meta":{"lineno":70,"filename":"index.js","path":"/home/simpo/Projects/map-watch"},"order":4},"WatchMapOptions.":{"longname":"WatchMapOptions.","name":"WatchMapOptions.","scope":"global","kind":"typedef","properties":[{"type":{"names":["boolean"]},"description":"If true and value for given key is set fire the watch straight away.","name":"always"},{"type":{"names":["Object"]},"description":"Context to assign to callback.","name":"context"}],"meta":{"lineno":5,"filename":"index.js","path":"/home/simpo/Projects/map-watch"},"order":0},"WatchMap#set":{"longname":"WatchMap#set","name":"set","scope":"instance","kind":"function","description":"Adds or updates an element with a specified key and value to the WatchMap object.","memberof":"WatchMap","params":[{"type":{"names":["*"]},"description":"The key of the element to add to the Map object.","name":"key"},{"type":{"names":["*"]},"description":"The value of the element to add to the Map object.","name":"value"}],"returns":[{"type":{"names":["WatchMap"]}}],"access":"public","meta":{"lineno":115,"filename":"index.js","path":"/home/simpo/Projects/map-watch"},"order":7},"WatchMap#delete":{"longname":"WatchMap#delete","name":"delete","scope":"instance","kind":"function","memberof":"WatchMap","params":[{"type":{"names":["*"]},"description":"The key of the element to remove from the WatchMap object.","name":"key"}],"returns":[{"type":{"names":["boolean"]},"description":"Returns true if an element in the WatchMap object existed and has been removed, or false if the element does not exist."}],"access":"public","meta":{"lineno":130,"filename":"index.js","path":"/home/simpo/Projects/map-watch"},"order":8},"WatchMap#watch":{"longname":"WatchMap#watch","name":"watch","scope":"instance","kind":"function","description":"Set a watcher on the given key. Will fire the supplied callback every time the value of the item is changed via set()/delete(). If always is set then fire straight-away if the item has a value.","memberof":"WatchMap","params":[{"type":{"names":["*"]},"description":"The item name to watch.","name":"key"},{"type":{"names":["function"]},"description":"The callback to fire.","name":"callback"},{"type":{"names":["WatchMapOptions"]},"description":"for the watch operation.","name":"Options"}],"returns":[{"type":{"names":["function"]},"description":"An unwatch function to remove the watcher."}],"access":"public","meta":{"lineno":148,"filename":"index.js","path":"/home/simpo/Projects/map-watch"},"order":9},"WatchMap#once":{"longname":"WatchMap#once","name":"once","scope":"instance","kind":"function","description":"Set a watcher on the given key. Will fire the supplied callback only once when value of the item is changed via set()/delete(). If always is set then fire straight-away if the item has a value.","memberof":"WatchMap","params":[{"type":{"names":["*"]},"description":"The item name to watch.","name":"key"},{"type":{"names":["function"]},"description":"The callback to fire.","name":"callback"},{"type":{"names":["WatchMapOptions"]},"description":"for the watch operation.","name":"Options"}],"returns":[{"type":{"names":["function"]},"description":"An unwatch function to remove the watcher."}],"access":"public","meta":{"lineno":188,"filename":"index.js","path":"/home/simpo/Projects/map-watch"},"order":10},"WatchMap#countWatchers":{"longname":"WatchMap#countWatchers","name":"countWatchers","scope":"instance","kind":"function","description":"Count the watchers assigned to a key.","memberof":"WatchMap","params":[{"type":{"names":["*"]},"description":"The item to count watchers on.","name":"key"}],"returns":[{"type":{"names":["integer"]},"description":"Number of watchers on item."}],"access":"public","meta":{"lineno":208,"filename":"index.js","path":"/home/simpo/Projects/map-watch"},"order":11}}